"""Добавление перечисления whisper_model в БД.

Эта миграция создаёт тип ENUM в PostgreSQL для колонки whisper_model и
переконвертирует существующие значения в новый тип. Докстринг служит для
локальной документации истории миграций.
"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd02885245d0b'
down_revision: Union[str, Sequence[str], None] = '201b28b77ece'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Создаем тип whispermodel
    op.execute("CREATE TYPE whispermodel AS ENUM ('BASE', 'SMALL', 'MEDIUM', 'LARGE')")
    op.execute("ALTER TABLE audio_files ALTER COLUMN whisper_model TYPE whispermodel USING whisper_model::whispermodel")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('audio_files', 'whisper_model',
               existing_type=sa.Enum('BASE', 'SMALL', 'MEDIUM', 'LARGE', name='whispermodel'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.execute("DROP TYPE whispermodel")
    # ### end Alembic commands ###
